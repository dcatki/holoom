name: End-to-End Tests

on:
  pull_request:
  push:
    branches: main

jobs:
  build-wasm:
    name: Build wasm
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: 1.75.0
          target: wasm32-unknown-unknown
      - name: Setup dependency caching
        uses: Swatinem/rust-cache@v2.2.1
      - name: Run build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target wasm32-unknown-unknown --package '*_integrity' --package '*_coordinator'
      - name: Move wasm files
        run: scripts/mv_zome_wasm.sh
        # We rename the directory such that none of it files are covered by the
        # .gitignore - which the upload-artifact action skips
      - name: Rename artifact
        run: mv workdir happ_workdir
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: happ_workdir
          path: happ_workdir
          overwrite: true

  e2e:
    name: Build and run end-to-end tests
    needs: build-wasm
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Download happ_workdir
        uses: actions/download-artifact@v4
        with:
          name: happ_workdir
          path: docker/happ_workdir
      - name: Build images
        run: |
          docker build --target local-services -t game-identity/local-services docker
          docker build --target authority-agent-sandbox -t game-identity/authority-agent-sandbox docker
          docker build --target holo-dev-server -t game-identity/holo-dev-server docker
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.19.1"
          cache: "npm"
      - name: Setup node dependency cache
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: node_modules-${{ hashFiles('**/package-lock.json')}}
      - run: npm i
      - run: npm run build:client
      - name: Start frontend in background
        run: npm run dev -w @holochain-game-identity/e2e &
      - name: Run e2e tests
        run: npm run test -w @holochain-game-identity/e2e
