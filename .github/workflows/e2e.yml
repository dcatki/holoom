name: End-to-End Tests

on:
  pull_request:
  push:
    branches: main

jobs:
  build-wasm:
    name: Build DNA
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Install nix
        uses: cachix/install-nix-action@v18
        with:
          install_url: https://releases.nixos.org/nix/nix-2.13.3/install
          extra_nix_config: |
            experimental-features = flakes nix-command
      - uses: cachix/cachix-action@v10
        with:
          name: holochain-ci
      - name: Set up Rust cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: game-identity-dna-${{ hashFiles('**/Cargo.lock') }}
      - name: Build DNA
        run: |
          nix develop --command \
            npm run build:dna
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: happ_workdir
          path: workdir
          overwrite: true

  dna-tests:
    name: DNA Tests
    runs-on: ubuntu-20.04
    needs:
      - build-wasm
    steps:
      - uses: actions/checkout@v3
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
      - name: Install nix
        uses: cachix/install-nix-action@v18
        with:
          install_url: https://releases.nixos.org/nix/nix-2.13.3/install
          extra_nix_config: |
            experimental-features = flakes nix-command
      - uses: cachix/cachix-action@v10
        with:
          name: holochain-ci
      - name: Set up Rust cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: game-identity-dna-tests-${{ hashFiles('**/Cargo.lock') }}
      - run: rm -rf workdir
      - name: Download DNA
        uses: actions/download-artifact@v4
        with:
          name: happ_workdir
          path: workdir
      - name: Build and run tests
        run: |
          nix develop --command \
            cargo nextest run -j 1

  e2e:
    name: Build and run end-to-end tests
    needs: build-wasm
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Download happ_workdir
        uses: actions/download-artifact@v4
        with:
          name: happ_workdir
          path: docker/happ_workdir
      - name: Build images
        run: |
          docker build --target local-services -t game-identity/local-services docker
          docker build --target authority-agent-sandbox -t game-identity/authority-agent-sandbox docker
          docker build --target holo-dev-server -t game-identity/holo-dev-server docker
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.19.1"
          cache: "npm"
      - name: Setup node dependency cache
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: node_modules-${{ hashFiles('**/package-lock.json')}}
      - run: npm i
      - run: npx puppeteer browsers install chrome
      - run: npm run build:client
      - name: Start frontend in background
        run: npm run dev -w @holochain-game-identity/e2e &
      - name: Run e2e tests
        run: npm run test -w @holochain-game-identity/e2e
